<?xml version='1.0' encoding='ASCII'?>
<flow_graph>
  <timestamp>Mon Jul  8 18:02:24 2013</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>id</key>
      <value>burst_rx</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>title</key>
      <value>Burst QPSK Rx Handler</value>
    </param>
    <param>
      <key>author</key>
      <value>Tim O'Shea</value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value>1280, 1024</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>evt</value>
    </param>
    <param>
      <key>category</key>
      <value>Custom</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>pre_hook</key>
      <value>pre_hook</value>
    </param>
    <param>
      <key>post_hook</key>
      <value>post_hook</value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(10, 10)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>value</key>
      <value>32000</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(10, 191)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_mpsk_receiver_cc</key>
    <param>
      <key>id</key>
      <value>digital_mpsk_receiver_cc_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>M</key>
      <value>4</value>
    </param>
    <param>
      <key>theta</key>
      <value>0</value>
    </param>
    <param>
      <key>w</key>
      <value>cmath.pi/50.0</value>
    </param>
    <param>
      <key>fmin</key>
      <value>-0.5</value>
    </param>
    <param>
      <key>fmax</key>
      <value>0.5</value>
    </param>
    <param>
      <key>mu</key>
      <value>0.25</value>
    </param>
    <param>
      <key>gain_mu</key>
      <value>0.02</value>
    </param>
    <param>
      <key>omega</key>
      <value>2.0</value>
    </param>
    <param>
      <key>gain_omega</key>
      <value>0.01</value>
    </param>
    <param>
      <key>omega_relative_limit</key>
      <value>0.01</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(485, 43)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_file_sink</key>
    <param>
      <key>id</key>
      <value>fsnk0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>file</key>
      <value>/tmp/burst_pre_samp.out</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>unbuffered</key>
      <value>False</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(276, 268)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_file_sink</key>
    <param>
      <key>id</key>
      <value>fsnk1</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>file</key>
      <value>/tmp/sync_const.out</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>unbuffered</key>
      <value>False</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(775, 79)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_file_sink</key>
    <param>
      <key>id</key>
      <value>blocks_file_sink_2</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>False</value>
    </param>
    <param>
      <key>file</key>
      <value>/tmp/burst_rx_unpacked.bits</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>unbuffered</key>
      <value>False</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(797, 417)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_diff_decoder_bb</key>
    <param>
      <key>id</key>
      <value>digital_diff_decoder_bb_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>modulus</key>
      <value>4</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(536, 398)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_map_bb</key>
    <param>
      <key>id</key>
      <value>digital_map_bb_0_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>map</key>
      <value>[0,1,3,2]</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(551, 449)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_map_bb</key>
    <param>
      <key>id</key>
      <value>digital_map_bb_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>map</key>
      <value>[0,3,1,2]</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(545, 350)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_constellation_decoder_cb</key>
    <param>
      <key>id</key>
      <value>digital_constellation_decoder_cb_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>constellation</key>
      <value>const.base()</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(500, 290)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_unpack_k_bits_bb</key>
    <param>
      <key>id</key>
      <value>blocks_unpack_k_bits_bb_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>k</key>
      <value>2</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(548, 505)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>id</key>
      <value>import_1</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>import</key>
      <value>import binascii, cmath</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(314, 60)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_multiply_const_vxx</key>
    <param>
      <key>id</key>
      <value>blocks_multiply_const_vxx_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>const</key>
      <value>cmath.exp(-1j*cmath.pi/4)</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(483, 238)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>id</key>
      <value>import_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>import</key>
      <value>from gnuradio.digital import digital_swig</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(313, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>id</key>
      <value>const</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>value</key>
      <value>digital_swig.constellation_qpsk()</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(745, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>id</key>
      <value>pool_size</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(215, 10)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>variable_es_post_hook</key>
    <param>
      <key>id</key>
      <value>post_hook</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>value</key>
      <value>""# get blocks ref 
blocks = val.handler.pb2();

# generate preamble vector
import numpy;
head = '\\\\x0f\\\\xff\\\\xf0\\\\x00\\\\x00\\\\x00\\\\x0f\\\\xf0\\\\xf0\\\\xff\\\\xf0\\\\xff\\\\xff\\\\xff\\\\xf0\\\\x00\\\\xf0\\\\xf0\\\\x0f\\\\xff\\\\xac\\\\xac\\\\xde\\\\xcb\\\\xfa\\\\xfb\\\\x0e\\\\xf0\\\\x97\\\\x17\\\\x82\\\\x1a'
vec = numpy.frombuffer(head, numpy.uint8);
bvec = numpy.unpackbits(vec);
bvec_rev = bvec-0.5;

# get received bits
rxbits = blocks['vs2'].data();
rxbits_n = numpy.array(rxbits,numpy.uint8);
rxbits_no = rxbits_n - 0.5;

# correlate the two 
xc = numpy.convolve(bvec_rev, rxbits_no);
#xc = numpy.convolve(rxbits_no,bvec_rev);

# find correlation peak
offset = list(xc).index(max(xc)) + 11*8;
print "Offset = %d"%(offset);

print "num rxbits = %d"%(len(rxbits));

#extract payload range
out = rxbits[offset:offset+512];
outvec = numpy.packbits(out);

# display payload
payload_hex = binascii.hexlify(outvec.tostring());
print "burst_rx got payoad (%s)"%(payload_hex); 

blocks['fsnk1'].close() 
blocks["fsnk0"].close();    ""</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(12, 341)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>pad_source</key>
    <param>
      <key>id</key>
      <value>pad_source_0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>label</key>
      <value>in</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>optional</key>
      <value>False</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(108, 190)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_vector_sink_x</key>
    <param>
      <key>id</key>
      <value>vs2</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(800, 509)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>variable_es_pre_hook</key>
    <param>
      <key>id</key>
      <value>pre_hook</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>value</key>
      <value>""print "QPSK RX HANDLER RUNNING"  

# get blocks reference
blocks = val.handler.pb2();

# clear vector sinks
#blocks['vsink'].reset();
blocks['vs2'].reset(); 
  
idx = es.event_time( val.msg );
blocks['fsnk1'].open("/tmp/burst_%d.dat"%(idx));       
blocks["fsnk0"].open("/tmp/burst_pre_%d.dat"%(idx));
    ""</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(11, 259)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
  </block>
  <connection>
    <source_block_id>pad_source_0</source_block_id>
    <sink_block_id>digital_mpsk_receiver_cc_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_mpsk_receiver_cc_0</source_block_id>
    <sink_block_id>blocks_multiply_const_vxx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_unpack_k_bits_bb_0</source_block_id>
    <sink_block_id>vs2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_unpack_k_bits_bb_0</source_block_id>
    <sink_block_id>blocks_file_sink_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_diff_decoder_bb_0</source_block_id>
    <sink_block_id>digital_map_bb_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_map_bb_0</source_block_id>
    <sink_block_id>digital_diff_decoder_bb_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_map_bb_0_0</source_block_id>
    <sink_block_id>blocks_unpack_k_bits_bb_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_constellation_decoder_cb_0</source_block_id>
    <sink_block_id>digital_map_bb_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_vxx_0</source_block_id>
    <sink_block_id>fsnk1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_vxx_0</source_block_id>
    <sink_block_id>digital_constellation_decoder_cb_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>pad_source_0</source_block_id>
    <sink_block_id>fsnk0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
</flow_graph>
